name: Deploy Shop Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  BACKEND_URL: 'https://shop-backend.zaitis.dev'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Angular app for production
      run: npm run build:prod
      
    - name: Run tests
      run: npm run test:ci
      continue-on-error: true
      
    - name: Verify build output
      run: |
        ls -la dist/
        echo "Build size:"
        du -sh dist/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
        
    - name: Deploy to server via SSH (password auth)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          echo "🚀 Starting deployment..."
          
          # Create backup of current deployment
          if [ -d "/var/www/shop-demo" ]; then
            sudo cp -r /var/www/shop-demo /var/www/shop-demo-backup-$(date +%Y%m%d_%H%M%S)
            echo "✅ Backup created"
          fi
          
          # Create directory if it doesn't exist
          sudo mkdir -p /var/www/shop-demo
          
          # Clear existing files
          sudo rm -rf /var/www/shop-demo/*
          echo "🧹 Cleaned deployment directory"
          
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        source: "dist/*"
        target: "/var/www/shop-demo/"
        strip_components: 1
        
    - name: Set proper permissions and restart services
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          echo "🔧 Setting permissions..."
          
          # Set ownership and permissions
          sudo chown -R www-data:www-data /var/www/shop-demo/
          sudo chmod -R 755 /var/www/shop-demo/
          
          # Restart web server
          sudo systemctl reload nginx || sudo systemctl reload apache2 || echo "⚠️ Web server reload failed"
          
          echo "✅ Deployment completed successfully"
          echo "📁 Files deployed to: /var/www/shop-demo"
          echo "🌐 Backend API: ${{ env.BACKEND_URL }}"
          
    - name: Health check
      run: |
        echo "🩺 Performing health check..."
        sleep 10
        
        # Check if server responds
        if curl -f -s -o /dev/null http://91.99.187.62; then
          echo "✅ Server is responding"
        else
          echo "⚠️ Server health check failed, but this might be normal if domain is not set up"
        fi
        
        # Check backend API
        if curl -f -s -o /dev/null ${{ env.BACKEND_URL }}/api/categories; then
          echo "✅ Backend API is accessible"
        else
          echo "⚠️ Backend API check failed"
        fi
        
  notify:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "🎉 Deployment successful!"
          echo "📦 Build size: $(du -sh dist/ 2>/dev/null || echo 'Unknown')"
          echo "🌐 Server: 91.99.187.62"
          echo "📁 Path: /var/www/shop-demo"
          echo "🔧 Backend: ${{ env.BACKEND_URL }}"
          echo "📚 API Docs: ${{ env.BACKEND_URL }}/swagger-ui/index.html"
          echo "👨‍💼 Admin: admin/zaitis123"
        else
          echo "❌ Deployment failed!"
          echo "Check the logs above for details"
          exit 1
        fi 